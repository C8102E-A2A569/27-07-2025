// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.32.0--rc1
// source: archive.proto

package protos

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateTaskRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateTaskRequest) Reset() {
	*x = CreateTaskRequest{}
	mi := &file_archive_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTaskRequest) ProtoMessage() {}

func (x *CreateTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_archive_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTaskRequest.ProtoReflect.Descriptor instead.
func (*CreateTaskRequest) Descriptor() ([]byte, []int) {
	return file_archive_proto_rawDescGZIP(), []int{0}
}

type CreateTaskResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TaskId        string                 `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	Status        string                 `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateTaskResponse) Reset() {
	*x = CreateTaskResponse{}
	mi := &file_archive_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateTaskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTaskResponse) ProtoMessage() {}

func (x *CreateTaskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_archive_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTaskResponse.ProtoReflect.Descriptor instead.
func (*CreateTaskResponse) Descriptor() ([]byte, []int) {
	return file_archive_proto_rawDescGZIP(), []int{1}
}

func (x *CreateTaskResponse) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *CreateTaskResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type AddFilesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TaskId        string                 `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	Urls          []string               `protobuf:"bytes,2,rep,name=urls,proto3" json:"urls,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddFilesRequest) Reset() {
	*x = AddFilesRequest{}
	mi := &file_archive_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddFilesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddFilesRequest) ProtoMessage() {}

func (x *AddFilesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_archive_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddFilesRequest.ProtoReflect.Descriptor instead.
func (*AddFilesRequest) Descriptor() ([]byte, []int) {
	return file_archive_proto_rawDescGZIP(), []int{2}
}

func (x *AddFilesRequest) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *AddFilesRequest) GetUrls() []string {
	if x != nil {
		return x.Urls
	}
	return nil
}

type AddFilesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        string                 `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	FailedUrls    []string               `protobuf:"bytes,3,rep,name=failed_urls,json=failedUrls,proto3" json:"failed_urls,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddFilesResponse) Reset() {
	*x = AddFilesResponse{}
	mi := &file_archive_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddFilesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddFilesResponse) ProtoMessage() {}

func (x *AddFilesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_archive_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddFilesResponse.ProtoReflect.Descriptor instead.
func (*AddFilesResponse) Descriptor() ([]byte, []int) {
	return file_archive_proto_rawDescGZIP(), []int{3}
}

func (x *AddFilesResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *AddFilesResponse) GetFailedUrls() []string {
	if x != nil {
		return x.FailedUrls
	}
	return nil
}

type GetTaskStatusRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TaskId        string                 `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTaskStatusRequest) Reset() {
	*x = GetTaskStatusRequest{}
	mi := &file_archive_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTaskStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTaskStatusRequest) ProtoMessage() {}

func (x *GetTaskStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_archive_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTaskStatusRequest.ProtoReflect.Descriptor instead.
func (*GetTaskStatusRequest) Descriptor() ([]byte, []int) {
	return file_archive_proto_rawDescGZIP(), []int{4}
}

func (x *GetTaskStatusRequest) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

type GetTaskStatusResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TaskId        string                 `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	Status        string                 `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	FailedUrls    []string               `protobuf:"bytes,3,rep,name=failed_urls,json=failedUrls,proto3" json:"failed_urls,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTaskStatusResponse) Reset() {
	*x = GetTaskStatusResponse{}
	mi := &file_archive_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTaskStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTaskStatusResponse) ProtoMessage() {}

func (x *GetTaskStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_archive_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTaskStatusResponse.ProtoReflect.Descriptor instead.
func (*GetTaskStatusResponse) Descriptor() ([]byte, []int) {
	return file_archive_proto_rawDescGZIP(), []int{5}
}

func (x *GetTaskStatusResponse) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *GetTaskStatusResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *GetTaskStatusResponse) GetFailedUrls() []string {
	if x != nil {
		return x.FailedUrls
	}
	return nil
}

type DownloadArchiveRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TaskId        string                 `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DownloadArchiveRequest) Reset() {
	*x = DownloadArchiveRequest{}
	mi := &file_archive_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DownloadArchiveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownloadArchiveRequest) ProtoMessage() {}

func (x *DownloadArchiveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_archive_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownloadArchiveRequest.ProtoReflect.Descriptor instead.
func (*DownloadArchiveRequest) Descriptor() ([]byte, []int) {
	return file_archive_proto_rawDescGZIP(), []int{6}
}

func (x *DownloadArchiveRequest) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

type DownloadArchiveResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ArchiveData   []byte                 `protobuf:"bytes,1,opt,name=archive_data,json=archiveData,proto3" json:"archive_data,omitempty"`
	Filename      string                 `protobuf:"bytes,2,opt,name=filename,proto3" json:"filename,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DownloadArchiveResponse) Reset() {
	*x = DownloadArchiveResponse{}
	mi := &file_archive_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DownloadArchiveResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownloadArchiveResponse) ProtoMessage() {}

func (x *DownloadArchiveResponse) ProtoReflect() protoreflect.Message {
	mi := &file_archive_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownloadArchiveResponse.ProtoReflect.Descriptor instead.
func (*DownloadArchiveResponse) Descriptor() ([]byte, []int) {
	return file_archive_proto_rawDescGZIP(), []int{7}
}

func (x *DownloadArchiveResponse) GetArchiveData() []byte {
	if x != nil {
		return x.ArchiveData
	}
	return nil
}

func (x *DownloadArchiveResponse) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

var File_archive_proto protoreflect.FileDescriptor

const file_archive_proto_rawDesc = "" +
	"\n" +
	"\rarchive.proto\x12\aarchive\"\x13\n" +
	"\x11CreateTaskRequest\"E\n" +
	"\x12CreateTaskResponse\x12\x17\n" +
	"\atask_id\x18\x01 \x01(\tR\x06taskId\x12\x16\n" +
	"\x06status\x18\x02 \x01(\tR\x06status\">\n" +
	"\x0fAddFilesRequest\x12\x17\n" +
	"\atask_id\x18\x01 \x01(\tR\x06taskId\x12\x12\n" +
	"\x04urls\x18\x02 \x03(\tR\x04urls\"K\n" +
	"\x10AddFilesResponse\x12\x16\n" +
	"\x06status\x18\x02 \x01(\tR\x06status\x12\x1f\n" +
	"\vfailed_urls\x18\x03 \x03(\tR\n" +
	"failedUrls\"/\n" +
	"\x14GetTaskStatusRequest\x12\x17\n" +
	"\atask_id\x18\x01 \x01(\tR\x06taskId\"i\n" +
	"\x15GetTaskStatusResponse\x12\x17\n" +
	"\atask_id\x18\x01 \x01(\tR\x06taskId\x12\x16\n" +
	"\x06status\x18\x02 \x01(\tR\x06status\x12\x1f\n" +
	"\vfailed_urls\x18\x03 \x03(\tR\n" +
	"failedUrls\"1\n" +
	"\x16DownloadArchiveRequest\x12\x17\n" +
	"\atask_id\x18\x01 \x01(\tR\x06taskId\"X\n" +
	"\x17DownloadArchiveResponse\x12!\n" +
	"\farchive_data\x18\x01 \x01(\fR\varchiveData\x12\x1a\n" +
	"\bfilename\x18\x02 \x01(\tR\bfilename2\xc1\x02\n" +
	"\x11ArchiveZipService\x12E\n" +
	"\n" +
	"CreateTask\x12\x1a.archive.CreateTaskRequest\x1a\x1b.archive.CreateTaskResponse\x12?\n" +
	"\bAddFiles\x12\x18.archive.AddFilesRequest\x1a\x19.archive.AddFilesResponse\x12N\n" +
	"\rGetTaskStatus\x12\x1d.archive.GetTaskStatusRequest\x1a\x1e.archive.GetTaskStatusResponse\x12T\n" +
	"\x0fDownloadArchive\x12\x1f.archive.DownloadArchiveRequest\x1a .archive.DownloadArchiveResponseB\n" +
	"Z\b./protosb\x06proto3"

var (
	file_archive_proto_rawDescOnce sync.Once
	file_archive_proto_rawDescData []byte
)

func file_archive_proto_rawDescGZIP() []byte {
	file_archive_proto_rawDescOnce.Do(func() {
		file_archive_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_archive_proto_rawDesc), len(file_archive_proto_rawDesc)))
	})
	return file_archive_proto_rawDescData
}

var file_archive_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_archive_proto_goTypes = []any{
	(*CreateTaskRequest)(nil),       // 0: archive.CreateTaskRequest
	(*CreateTaskResponse)(nil),      // 1: archive.CreateTaskResponse
	(*AddFilesRequest)(nil),         // 2: archive.AddFilesRequest
	(*AddFilesResponse)(nil),        // 3: archive.AddFilesResponse
	(*GetTaskStatusRequest)(nil),    // 4: archive.GetTaskStatusRequest
	(*GetTaskStatusResponse)(nil),   // 5: archive.GetTaskStatusResponse
	(*DownloadArchiveRequest)(nil),  // 6: archive.DownloadArchiveRequest
	(*DownloadArchiveResponse)(nil), // 7: archive.DownloadArchiveResponse
}
var file_archive_proto_depIdxs = []int32{
	0, // 0: archive.ArchiveZipService.CreateTask:input_type -> archive.CreateTaskRequest
	2, // 1: archive.ArchiveZipService.AddFiles:input_type -> archive.AddFilesRequest
	4, // 2: archive.ArchiveZipService.GetTaskStatus:input_type -> archive.GetTaskStatusRequest
	6, // 3: archive.ArchiveZipService.DownloadArchive:input_type -> archive.DownloadArchiveRequest
	1, // 4: archive.ArchiveZipService.CreateTask:output_type -> archive.CreateTaskResponse
	3, // 5: archive.ArchiveZipService.AddFiles:output_type -> archive.AddFilesResponse
	5, // 6: archive.ArchiveZipService.GetTaskStatus:output_type -> archive.GetTaskStatusResponse
	7, // 7: archive.ArchiveZipService.DownloadArchive:output_type -> archive.DownloadArchiveResponse
	4, // [4:8] is the sub-list for method output_type
	0, // [0:4] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_archive_proto_init() }
func file_archive_proto_init() {
	if File_archive_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_archive_proto_rawDesc), len(file_archive_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_archive_proto_goTypes,
		DependencyIndexes: file_archive_proto_depIdxs,
		MessageInfos:      file_archive_proto_msgTypes,
	}.Build()
	File_archive_proto = out.File
	file_archive_proto_goTypes = nil
	file_archive_proto_depIdxs = nil
}
